// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_openfl_display_Bitmap
#include <openfl/display/Bitmap.h>
#endif
#ifndef INCLUDED_openfl_display_DOMRenderer
#include <openfl/display/DOMRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectRenderer
#include <openfl/display/DisplayObjectRenderer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_6e05dc14770b0678_22_new,"openfl.display.DOMRenderer","new",0xd62a842d,"openfl.display.DOMRenderer.new","openfl/display/DOMRenderer.hx",22,0x3d2c4865)
HX_LOCAL_STACK_FRAME(_hx_pos_6e05dc14770b0678_46_applyStyle,"openfl.display.DOMRenderer","applyStyle",0x738a30b6,"openfl.display.DOMRenderer.applyStyle","openfl/display/DOMRenderer.hx",46,0x3d2c4865)
HX_LOCAL_STACK_FRAME(_hx_pos_6e05dc14770b0678_52_clearStyle,"openfl.display.DOMRenderer","clearStyle",0x9d42f437,"openfl.display.DOMRenderer.clearStyle","openfl/display/DOMRenderer.hx",52,0x3d2c4865)
HX_LOCAL_STACK_FRAME(_hx_pos_6e05dc14770b0678_54___clearBitmap,"openfl.display.DOMRenderer","__clearBitmap",0x41e1b449,"openfl.display.DOMRenderer.__clearBitmap","openfl/display/DOMRenderer.hx",54,0x3d2c4865)
HX_LOCAL_STACK_FRAME(_hx_pos_6e05dc14770b0678_22_boot,"openfl.display.DOMRenderer","boot",0x872223c5,"openfl.display.DOMRenderer.boot","openfl/display/DOMRenderer.hx",22,0x3d2c4865)
namespace openfl{
namespace display{

void DOMRenderer_obj::__construct( ::Dynamic element){
            	HX_STACKFRAME(&_hx_pos_6e05dc14770b0678_22_new)
HXLINE(  32)		this->pixelRatio = ((Float)1);
HXLINE(  36)		super::__construct();
HXLINE(  38)		this->element = element;
            	}

Dynamic DOMRenderer_obj::__CreateEmpty() { return new DOMRenderer_obj; }

void *DOMRenderer_obj::_hx_vtable = 0;

Dynamic DOMRenderer_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DOMRenderer_obj > _hx_result = new DOMRenderer_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool DOMRenderer_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x1dbc9c37) {
		if (inClassId<=(int)0x1b123bf8) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x1b123bf8;
		} else {
			return inClassId==(int)0x1dbc9c37;
		}
	} else {
		return inClassId==(int)0x7cdf41d6;
	}
}

void DOMRenderer_obj::applyStyle( ::openfl::display::DisplayObject parent, ::Dynamic childElement){
            	HX_STACKFRAME(&_hx_pos_6e05dc14770b0678_46_applyStyle)
            	}


HX_DEFINE_DYNAMIC_FUNC2(DOMRenderer_obj,applyStyle,(void))

void DOMRenderer_obj::clearStyle( ::Dynamic childElement){
            	HX_STACKFRAME(&_hx_pos_6e05dc14770b0678_52_clearStyle)
            	}


HX_DEFINE_DYNAMIC_FUNC1(DOMRenderer_obj,clearStyle,(void))

void DOMRenderer_obj::_hx___clearBitmap( ::openfl::display::Bitmap bitmap){
            	HX_STACKFRAME(&_hx_pos_6e05dc14770b0678_54___clearBitmap)
            	}


HX_DEFINE_DYNAMIC_FUNC1(DOMRenderer_obj,_hx___clearBitmap,(void))


hx::ObjectPtr< DOMRenderer_obj > DOMRenderer_obj::__new( ::Dynamic element) {
	hx::ObjectPtr< DOMRenderer_obj > __this = new DOMRenderer_obj();
	__this->__construct(element);
	return __this;
}

hx::ObjectPtr< DOMRenderer_obj > DOMRenderer_obj::__alloc(hx::Ctx *_hx_ctx, ::Dynamic element) {
	DOMRenderer_obj *__this = (DOMRenderer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DOMRenderer_obj), true, "openfl.display.DOMRenderer"));
	*(void **)__this = DOMRenderer_obj::_hx_vtable;
	__this->__construct(element);
	return __this;
}

DOMRenderer_obj::DOMRenderer_obj()
{
}

void DOMRenderer_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DOMRenderer);
	HX_MARK_MEMBER_NAME(element,"element");
	HX_MARK_MEMBER_NAME(pixelRatio,"pixelRatio");
	 ::openfl::display::DisplayObjectRenderer_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DOMRenderer_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(element,"element");
	HX_VISIT_MEMBER_NAME(pixelRatio,"pixelRatio");
	 ::openfl::display::DisplayObjectRenderer_obj::__Visit(HX_VISIT_ARG);
}

hx::Val DOMRenderer_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"element") ) { return hx::Val( element ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pixelRatio") ) { return hx::Val( pixelRatio ); }
		if (HX_FIELD_EQ(inName,"applyStyle") ) { return hx::Val( applyStyle_dyn() ); }
		if (HX_FIELD_EQ(inName,"clearStyle") ) { return hx::Val( clearStyle_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"__clearBitmap") ) { return hx::Val( _hx___clearBitmap_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DOMRenderer_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"element") ) { element=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"pixelRatio") ) { pixelRatio=inValue.Cast< Float >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DOMRenderer_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("element",bc,ae,54,06));
	outFields->push(HX_("pixelRatio",a5,78,12,83));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo DOMRenderer_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*  ::Dynamic */ ,(int)offsetof(DOMRenderer_obj,element),HX_("element",bc,ae,54,06)},
	{hx::fsFloat,(int)offsetof(DOMRenderer_obj,pixelRatio),HX_("pixelRatio",a5,78,12,83)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DOMRenderer_obj_sStaticStorageInfo = 0;
#endif

static ::String DOMRenderer_obj_sMemberFields[] = {
	HX_("element",bc,ae,54,06),
	HX_("pixelRatio",a5,78,12,83),
	HX_("applyStyle",e3,20,6f,2f),
	HX_("clearStyle",64,e4,27,59),
	HX_("__clearBitmap",3c,5e,71,cd),
	::String(null()) };

hx::Class DOMRenderer_obj::__mClass;

void DOMRenderer_obj::__register()
{
	DOMRenderer_obj _hx_dummy;
	DOMRenderer_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("openfl.display.DOMRenderer",bb,e9,d7,f6);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DOMRenderer_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DOMRenderer_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DOMRenderer_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DOMRenderer_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void DOMRenderer_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_6e05dc14770b0678_22_boot)
HXDLIN(  22)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("obj",f7,8f,54,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:Dynamic",ce,ea,47,3c))))));
            	}
}

} // end namespace openfl
} // end namespace display
