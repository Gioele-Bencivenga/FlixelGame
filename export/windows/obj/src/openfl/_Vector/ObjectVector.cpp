// Generated by Haxe 4.0.2
#include <hxcpp.h>

#ifndef INCLUDED_openfl__Vector_IVector
#include <openfl/_Vector/IVector.h>
#endif
#ifndef INCLUDED_openfl__Vector_ObjectVector
#include <openfl/_Vector/ObjectVector.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1638_new,"openfl._Vector.ObjectVector","new",0x1b3b8afe,"openfl._Vector.ObjectVector.new","openfl/Vector.hx",1638,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1662_concat,"openfl._Vector.ObjectVector","concat",0x91684536,"openfl._Vector.ObjectVector.concat","openfl/Vector.hx",1662,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1683_copy,"openfl._Vector.ObjectVector","copy",0xb1a04b57,"openfl._Vector.ObjectVector.copy","openfl/Vector.hx",1683,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1688_filter,"openfl._Vector.ObjectVector","filter",0x4ecd5bda,"openfl._Vector.ObjectVector.filter","openfl/Vector.hx",1688,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1693_get,"openfl._Vector.ObjectVector","get",0x1b363b34,"openfl._Vector.ObjectVector.get","openfl/Vector.hx",1693,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1697_indexOf,"openfl._Vector.ObjectVector","indexOf",0x7c5baa67,"openfl._Vector.ObjectVector.indexOf","openfl/Vector.hx",1697,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1711_insertAt,"openfl._Vector.ObjectVector","insertAt",0x4f58852e,"openfl._Vector.ObjectVector.insertAt","openfl/Vector.hx",1711,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1719_iterator,"openfl._Vector.ObjectVector","iterator",0x20d35290,"openfl._Vector.ObjectVector.iterator","openfl/Vector.hx",1719,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1724_join,"openfl._Vector.ObjectVector","join",0xb640c38c,"openfl._Vector.ObjectVector.join","openfl/Vector.hx",1724,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1728_lastIndexOf,"openfl._Vector.ObjectVector","lastIndexOf",0x069b85b1,"openfl._Vector.ObjectVector.lastIndexOf","openfl/Vector.hx",1728,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1742_pop,"openfl._Vector.ObjectVector","pop",0x1b3d182f,"openfl._Vector.ObjectVector.pop","openfl/Vector.hx",1742,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1754_push,"openfl._Vector.ObjectVector","push",0xba3ca17c,"openfl._Vector.ObjectVector.push","openfl/Vector.hx",1754,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1765_removeAt,"openfl._Vector.ObjectVector","removeAt",0x3a5476f9,"openfl._Vector.ObjectVector.removeAt","openfl/Vector.hx",1765,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1775_reverse,"openfl._Vector.ObjectVector","reverse",0xb6989ac0,"openfl._Vector.ObjectVector.reverse","openfl/Vector.hx",1775,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1782_set,"openfl._Vector.ObjectVector","set",0x1b3f5640,"openfl._Vector.ObjectVector.set","openfl/Vector.hx",1782,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1794_shift,"openfl._Vector.ObjectVector","shift",0xec650aa0,"openfl._Vector.ObjectVector.shift","openfl/Vector.hx",1794,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1805_slice,"openfl._Vector.ObjectVector","slice",0xef09e270,"openfl._Vector.ObjectVector.slice","openfl/Vector.hx",1805,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1812_sort,"openfl._Vector.ObjectVector","sort",0xbc33b700,"openfl._Vector.ObjectVector.sort","openfl/Vector.hx",1812,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1817_splice,"openfl._Vector.ObjectVector","splice",0x8936c19e,"openfl._Vector.ObjectVector.splice","openfl/Vector.hx",1817,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1823_toJSON,"openfl._Vector.ObjectVector","toJSON",0x45a18545,"openfl._Vector.ObjectVector.toJSON","openfl/Vector.hx",1823,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1828_toString,"openfl._Vector.ObjectVector","toString",0xc5a7d94e,"openfl._Vector.ObjectVector.toString","openfl/Vector.hx",1828,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1833_unshift,"openfl._Vector.ObjectVector","unshift",0x14504527,"openfl._Vector.ObjectVector.unshift","openfl/Vector.hx",1833,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1842_get_length,"openfl._Vector.ObjectVector","get_length",0xa394f9d1,"openfl._Vector.ObjectVector.get_length","openfl/Vector.hx",1842,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1846_set_length,"openfl._Vector.ObjectVector","set_length",0xa7129845,"openfl._Vector.ObjectVector.set_length","openfl/Vector.hx",1846,0x4a01873c)
HX_LOCAL_STACK_FRAME(_hx_pos_98c8e9225b0b8e2b_1629_boot,"openfl._Vector.ObjectVector","boot",0xb0f713d4,"openfl._Vector.ObjectVector.boot","openfl/Vector.hx",1629,0x4a01873c)
namespace openfl{
namespace _Vector{

void ObjectVector_obj::__construct(hx::Null< int >  __o_length,hx::Null< bool >  __o_fixed,::cpp::VirtualArray array,hx::Null< bool >  __o_forceCopy){
            		int length = __o_length.Default(0);
            		bool fixed = __o_fixed.Default(false);
            		bool forceCopy = __o_forceCopy.Default(false);
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1638_new)
HXLINE(1639)		if (forceCopy) {
HXLINE(1641)			this->_hx___array = ::cpp::VirtualArray_obj::__new();
HXLINE(1642)			if (hx::IsNotNull( array )) {
HXLINE(1642)				int _g = 0;
HXDLIN(1642)				int _g1 = array->get_length();
HXDLIN(1642)				while((_g < _g1)){
HXLINE(1642)					_g = (_g + 1);
HXDLIN(1642)					int i = (_g - 1);
HXLINE(1643)					this->_hx___array->set(i,array->__get(i));
            				}
            			}
            		}
            		else {
HXLINE(1647)			if (hx::IsNull( array )) {
HXLINE(1647)				array = ::cpp::VirtualArray_obj::__new();
            			}
HXLINE(1648)			this->_hx___array = array;
            		}
HXLINE(1651)		if ((length > 0)) {
HXLINE(1653)			this->set_length(length);
            		}
HXLINE(1656)		this->fixed = fixed;
            	}

Dynamic ObjectVector_obj::__CreateEmpty() { return new ObjectVector_obj; }

void *ObjectVector_obj::_hx_vtable = 0;

Dynamic ObjectVector_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ObjectVector_obj > _hx_result = new ObjectVector_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool ObjectVector_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x020730c8;
}

static ::openfl::_Vector::IVector_obj _hx_openfl__Vector_ObjectVector__hx_openfl__Vector_IVector= {
	( int (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::get_length,
	( int (hx::Object::*)(int))&::openfl::_Vector::ObjectVector_obj::set_length,
	( ::Dynamic (hx::Object::*)(::Dynamic))&::openfl::_Vector::ObjectVector_obj::concat,
	( ::Dynamic (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::copy,
	( ::Dynamic (hx::Object::*)( ::Dynamic))&::openfl::_Vector::ObjectVector_obj::filter,
	(  ::Dynamic (hx::Object::*)(int))&::openfl::_Vector::ObjectVector_obj::get,
	( int (hx::Object::*)( ::Dynamic,hx::Null< int > ))&::openfl::_Vector::ObjectVector_obj::indexOf,
	( void (hx::Object::*)(int, ::Dynamic))&::openfl::_Vector::ObjectVector_obj::insertAt,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::iterator,
	( ::String (hx::Object::*)(::String))&::openfl::_Vector::ObjectVector_obj::join,
	( int (hx::Object::*)( ::Dynamic, ::Dynamic))&::openfl::_Vector::ObjectVector_obj::lastIndexOf,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::pop,
	( int (hx::Object::*)( ::Dynamic))&::openfl::_Vector::ObjectVector_obj::push,
	(  ::Dynamic (hx::Object::*)(int))&::openfl::_Vector::ObjectVector_obj::removeAt,
	( ::Dynamic (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::reverse,
	(  ::Dynamic (hx::Object::*)(int, ::Dynamic))&::openfl::_Vector::ObjectVector_obj::set,
	(  ::Dynamic (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::shift,
	( ::Dynamic (hx::Object::*)(hx::Null< int > , ::Dynamic))&::openfl::_Vector::ObjectVector_obj::slice,
	( void (hx::Object::*)( ::Dynamic))&::openfl::_Vector::ObjectVector_obj::sort,
	( ::Dynamic (hx::Object::*)(int,int))&::openfl::_Vector::ObjectVector_obj::splice,
	( ::String (hx::Object::*)())&::openfl::_Vector::ObjectVector_obj::toString,
	( void (hx::Object::*)( ::Dynamic))&::openfl::_Vector::ObjectVector_obj::unshift,
};

void *ObjectVector_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x45e7caba: return &_hx_openfl__Vector_ObjectVector__hx_openfl__Vector_IVector;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

::Dynamic ObjectVector_obj::concat(::Dynamic a){
            	HX_GC_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1662_concat)
HXDLIN(1662)		if (hx::IsNull( a )) {
HXLINE(1664)			return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->copy(),null());
            		}
            		else {
HXLINE(1668)			 ::openfl::_Vector::ObjectVector other = ( ( ::openfl::_Vector::ObjectVector)(a) );
HXLINE(1670)			if ((other->_hx___array->get_length() > 0)) {
HXLINE(1672)				return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->concat(other->_hx___array),null());
            			}
            			else {
HXLINE(1676)				return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->copy(),null());
            			}
            		}
HXLINE(1662)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,concat,return )

::Dynamic ObjectVector_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1683_copy)
HXDLIN(1683)		bool _hx_tmp = this->fixed;
HXDLIN(1683)		return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,_hx_tmp,this->_hx___array->copy(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,copy,return )

::Dynamic ObjectVector_obj::filter( ::Dynamic callback){
            	HX_GC_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1688_filter)
HXDLIN(1688)		bool _hx_tmp = this->fixed;
HXDLIN(1688)		::cpp::VirtualArray _g = ::cpp::VirtualArray_obj::__new(0);
HXDLIN(1688)		{
HXDLIN(1688)			int _g1 = 0;
HXDLIN(1688)			::cpp::VirtualArray _g2 = this->_hx___array;
HXDLIN(1688)			while((_g1 < _g2->get_length())){
HXDLIN(1688)				 ::Dynamic v = _g2->__get(_g1);
HXDLIN(1688)				_g1 = (_g1 + 1);
HXDLIN(1688)				if (( (bool)(callback(v)) )) {
HXDLIN(1688)					_g->push(v);
            				}
            			}
            		}
HXDLIN(1688)		return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,_hx_tmp,_g,null());
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,filter,return )

 ::Dynamic ObjectVector_obj::get(int index){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1693_get)
HXDLIN(1693)		return this->_hx___array->__get(index);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,get,return )

int ObjectVector_obj::indexOf( ::Dynamic x,hx::Null< int >  __o_from){
            		int from = __o_from.Default(0);
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1697_indexOf)
HXLINE(1698)		{
HXLINE(1698)			int _g = from;
HXDLIN(1698)			int _g1 = this->_hx___array->get_length();
HXDLIN(1698)			while((_g < _g1)){
HXLINE(1698)				_g = (_g + 1);
HXDLIN(1698)				int i = (_g - 1);
HXLINE(1700)				if (hx::IsEq( this->_hx___array->__get(i),x )) {
HXLINE(1702)					return i;
            				}
            			}
            		}
HXLINE(1706)		return -1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ObjectVector_obj,indexOf,return )

void ObjectVector_obj::insertAt(int index, ::Dynamic element){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1711_insertAt)
HXDLIN(1711)		bool _hx_tmp;
HXDLIN(1711)		if (!(!(this->fixed))) {
HXDLIN(1711)			_hx_tmp = (index < this->_hx___array->get_length());
            		}
            		else {
HXDLIN(1711)			_hx_tmp = true;
            		}
HXDLIN(1711)		if (_hx_tmp) {
HXLINE(1713)			this->_hx___array->insert(index,element);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(ObjectVector_obj,insertAt,(void))

 ::Dynamic ObjectVector_obj::iterator(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1719_iterator)
HXDLIN(1719)		return this->_hx___array->iterator();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,iterator,return )

::String ObjectVector_obj::join(::String __o_sep){
            		::String sep = __o_sep;
            		if (hx::IsNull(__o_sep)) sep = HX_(",",2c,00,00,00);
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1724_join)
HXDLIN(1724)		return this->_hx___array->join(sep);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,join,return )

int ObjectVector_obj::lastIndexOf( ::Dynamic x, ::Dynamic from){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1728_lastIndexOf)
HXLINE(1729)		 ::Dynamic i;
HXDLIN(1729)		bool i1;
HXDLIN(1729)		if (hx::IsNotNull( from )) {
HXLINE(1729)			i1 = hx::IsGreaterEq( from,this->_hx___array->get_length() );
            		}
            		else {
HXLINE(1729)			i1 = true;
            		}
HXDLIN(1729)		if (i1) {
HXLINE(1729)			i = (this->_hx___array->get_length() - 1);
            		}
            		else {
HXLINE(1729)			i = from;
            		}
HXLINE(1731)		while(hx::IsGreaterEq( i,0 )){
HXLINE(1733)			if (hx::IsEq( this->_hx___array->__get(( (int)(i) )),x )) {
HXLINE(1733)				return ( (int)(i) );
            			}
HXLINE(1734)			i = (( (int)(i) ) - 1);
            		}
HXLINE(1737)		return -1;
            	}


HX_DEFINE_DYNAMIC_FUNC2(ObjectVector_obj,lastIndexOf,return )

 ::Dynamic ObjectVector_obj::pop(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1742_pop)
HXDLIN(1742)		if (!(this->fixed)) {
HXLINE(1744)			return this->_hx___array->pop();
            		}
            		else {
HXLINE(1748)			return null();
            		}
HXLINE(1742)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,pop,return )

int ObjectVector_obj::push( ::Dynamic x){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1754_push)
HXDLIN(1754)		if (!(this->fixed)) {
HXLINE(1756)			return this->_hx___array->push(x);
            		}
            		else {
HXLINE(1760)			return this->_hx___array->get_length();
            		}
HXLINE(1754)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,push,return )

 ::Dynamic ObjectVector_obj::removeAt(int index){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1765_removeAt)
HXLINE(1766)		bool _hx_tmp;
HXDLIN(1766)		if (!(!(this->fixed))) {
HXLINE(1766)			_hx_tmp = (index < this->_hx___array->get_length());
            		}
            		else {
HXLINE(1766)			_hx_tmp = true;
            		}
HXDLIN(1766)		if (_hx_tmp) {
HXLINE(1768)			return this->_hx___array->splice(index,1)->__get(0);
            		}
HXLINE(1771)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,removeAt,return )

::Dynamic ObjectVector_obj::reverse(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1775_reverse)
HXLINE(1776)		this->_hx___array->reverse();
HXLINE(1777)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,reverse,return )

 ::Dynamic ObjectVector_obj::set(int index, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1782_set)
HXDLIN(1782)		bool _hx_tmp;
HXDLIN(1782)		if (!(!(this->fixed))) {
HXDLIN(1782)			_hx_tmp = (index < this->_hx___array->get_length());
            		}
            		else {
HXDLIN(1782)			_hx_tmp = true;
            		}
HXDLIN(1782)		if (_hx_tmp) {
HXLINE(1784)			return (this->_hx___array->set(index,value));
            		}
            		else {
HXLINE(1788)			return value;
            		}
HXLINE(1782)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(ObjectVector_obj,set,return )

 ::Dynamic ObjectVector_obj::shift(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1794_shift)
HXDLIN(1794)		if (!(this->fixed)) {
HXLINE(1796)			return this->_hx___array->shift();
            		}
            		else {
HXLINE(1800)			return null();
            		}
HXLINE(1794)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,shift,return )

::Dynamic ObjectVector_obj::slice(hx::Null< int >  __o_startIndex, ::Dynamic endIndex){
            		int startIndex = __o_startIndex.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1805_slice)
HXLINE(1806)		if (hx::IsNull( endIndex )) {
HXLINE(1806)			endIndex = 16777215;
            		}
HXLINE(1807)		return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->slice(startIndex,endIndex),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(ObjectVector_obj,slice,return )

void ObjectVector_obj::sort( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1812_sort)
HXDLIN(1812)		this->_hx___array->sort(f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,sort,(void))

::Dynamic ObjectVector_obj::splice(int pos,int len){
            	HX_GC_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1817_splice)
HXDLIN(1817)		return  ::openfl::_Vector::ObjectVector_obj::__alloc( HX_CTX ,0,false,this->_hx___array->splice(pos,len),null());
            	}


HX_DEFINE_DYNAMIC_FUNC2(ObjectVector_obj,splice,return )

 ::Dynamic ObjectVector_obj::toJSON(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1823_toJSON)
HXDLIN(1823)		return this->_hx___array;
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,toJSON,return )

::String ObjectVector_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1828_toString)
HXDLIN(1828)		if (hx::IsNotNull( this->_hx___array )) {
HXDLIN(1828)			return this->_hx___array->toString();
            		}
            		else {
HXDLIN(1828)			return null();
            		}
HXDLIN(1828)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,toString,return )

void ObjectVector_obj::unshift( ::Dynamic x){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1833_unshift)
HXDLIN(1833)		if (!(this->fixed)) {
HXLINE(1835)			this->_hx___array->unshift(x);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,unshift,(void))

int ObjectVector_obj::get_length(){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1842_get_length)
HXDLIN(1842)		return this->_hx___array->get_length();
            	}


HX_DEFINE_DYNAMIC_FUNC0(ObjectVector_obj,get_length,return )

int ObjectVector_obj::set_length(int value){
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1846_set_length)
HXLINE(1847)		if (!(this->fixed)) {
HXLINE(1850)			_hx_array_set_size_exact(this->_hx___array,value);
            		}
HXLINE(1872)		return this->_hx___array->get_length();
            	}


HX_DEFINE_DYNAMIC_FUNC1(ObjectVector_obj,set_length,return )


hx::ObjectPtr< ObjectVector_obj > ObjectVector_obj::__new(hx::Null< int >  __o_length,hx::Null< bool >  __o_fixed,::cpp::VirtualArray array,hx::Null< bool >  __o_forceCopy) {
	hx::ObjectPtr< ObjectVector_obj > __this = new ObjectVector_obj();
	__this->__construct(__o_length,__o_fixed,array,__o_forceCopy);
	return __this;
}

hx::ObjectPtr< ObjectVector_obj > ObjectVector_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< int >  __o_length,hx::Null< bool >  __o_fixed,::cpp::VirtualArray array,hx::Null< bool >  __o_forceCopy) {
	ObjectVector_obj *__this = (ObjectVector_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ObjectVector_obj), true, "openfl._Vector.ObjectVector"));
	*(void **)__this = ObjectVector_obj::_hx_vtable;
	__this->__construct(__o_length,__o_fixed,array,__o_forceCopy);
	return __this;
}

ObjectVector_obj::ObjectVector_obj()
{
}

void ObjectVector_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ObjectVector);
	HX_MARK_MEMBER_NAME(fixed,"fixed");
	HX_MARK_MEMBER_NAME(_hx___array,"__array");
	HX_MARK_END_CLASS();
}

void ObjectVector_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(fixed,"fixed");
	HX_VISIT_MEMBER_NAME(_hx___array,"__array");
}

hx::Val ObjectVector_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"pop") ) { return hx::Val( pop_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"copy") ) { return hx::Val( copy_dyn() ); }
		if (HX_FIELD_EQ(inName,"join") ) { return hx::Val( join_dyn() ); }
		if (HX_FIELD_EQ(inName,"push") ) { return hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"sort") ) { return hx::Val( sort_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"fixed") ) { return hx::Val( fixed ); }
		if (HX_FIELD_EQ(inName,"shift") ) { return hx::Val( shift_dyn() ); }
		if (HX_FIELD_EQ(inName,"slice") ) { return hx::Val( slice_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_length() ); }
		if (HX_FIELD_EQ(inName,"concat") ) { return hx::Val( concat_dyn() ); }
		if (HX_FIELD_EQ(inName,"filter") ) { return hx::Val( filter_dyn() ); }
		if (HX_FIELD_EQ(inName,"splice") ) { return hx::Val( splice_dyn() ); }
		if (HX_FIELD_EQ(inName,"toJSON") ) { return hx::Val( toJSON_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__array") ) { return hx::Val( _hx___array ); }
		if (HX_FIELD_EQ(inName,"indexOf") ) { return hx::Val( indexOf_dyn() ); }
		if (HX_FIELD_EQ(inName,"reverse") ) { return hx::Val( reverse_dyn() ); }
		if (HX_FIELD_EQ(inName,"unshift") ) { return hx::Val( unshift_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"insertAt") ) { return hx::Val( insertAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"iterator") ) { return hx::Val( iterator_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeAt") ) { return hx::Val( removeAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"get_length") ) { return hx::Val( get_length_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_length") ) { return hx::Val( set_length_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"lastIndexOf") ) { return hx::Val( lastIndexOf_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ObjectVector_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"fixed") ) { fixed=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"length") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_length(inValue.Cast< int >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"__array") ) { _hx___array=inValue.Cast< ::cpp::VirtualArray >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ObjectVector_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("fixed",74,f9,a1,00));
	outFields->push(HX_("length",e6,94,07,9f));
	outFields->push(HX_("__array",79,c6,ed,8f));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static hx::StorageInfo ObjectVector_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(ObjectVector_obj,fixed),HX_("fixed",74,f9,a1,00)},
	{hx::fsObject /* ::cpp::VirtualArray */ ,(int)offsetof(ObjectVector_obj,_hx___array),HX_("__array",79,c6,ed,8f)},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ObjectVector_obj_sStaticStorageInfo = 0;
#endif

static ::String ObjectVector_obj_sMemberFields[] = {
	HX_("fixed",74,f9,a1,00),
	HX_("__array",79,c6,ed,8f),
	HX_("concat",14,09,d0,c7),
	HX_("copy",b5,bb,c4,41),
	HX_("filter",b8,1f,35,85),
	HX_("get",96,80,4e,00),
	HX_("indexOf",c9,48,bf,e0),
	HX_("insertAt",8c,7c,1f,c2),
	HX_("iterator",ee,49,9a,93),
	HX_("join",ea,33,65,46),
	HX_("lastIndexOf",13,fd,6a,95),
	HX_("pop",91,5d,55,00),
	HX_("push",da,11,61,4a),
	HX_("removeAt",57,6e,1b,ad),
	HX_("reverse",22,39,fc,1a),
	HX_("set",a2,9b,57,00),
	HX_("shift",82,ec,22,7c),
	HX_("slice",52,c4,c7,7e),
	HX_("sort",5e,27,58,4c),
	HX_("splice",7c,85,9e,bf),
	HX_("toJSON",23,49,09,7c),
	HX_("toString",ac,d0,6e,38),
	HX_("unshift",89,e3,b3,78),
	HX_("get_length",af,04,8f,8f),
	HX_("set_length",23,a3,0c,93),
	::String(null()) };

hx::Class ObjectVector_obj::__mClass;

void ObjectVector_obj::__register()
{
	ObjectVector_obj _hx_dummy;
	ObjectVector_obj::_hx_vtable = *(void **)&_hx_dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_("openfl._Vector.ObjectVector",0c,f4,26,c3);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ObjectVector_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ObjectVector_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ObjectVector_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ObjectVector_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ObjectVector_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_98c8e9225b0b8e2b_1629_boot)
HXDLIN(1629)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(hx::Anon_obj::Create(3)
            				->setFixed(0,HX_("concat",14,09,d0,c7), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:Dynamic",ce,ea,47,3c)))))
            				->setFixed(1,HX_("_",5f,00,00,00), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:Dynamic",ce,ea,47,3c)))))
            				->setFixed(2,HX_("toJSON",23,49,09,7c), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:Dynamic",ce,ea,47,3c)))))))
            			->setFixed(1,HX_("obj",f7,8f,54,00), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("SuppressWarnings",0c,d3,d2,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("checkstyle:FieldDocComment",70,56,1b,20))))));
            	}
}

} // end namespace openfl
} // end namespace _Vector
