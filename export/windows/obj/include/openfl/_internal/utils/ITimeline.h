// Generated by Haxe 4.0.2
#ifndef INCLUDED_openfl__internal_utils_ITimeline
#define INCLUDED_openfl__internal_utils_ITimeline

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(openfl,_internal,utils,ITimeline)

namespace openfl{
namespace _internal{
namespace utils{


class HXCPP_CLASS_ATTRIBUTES ITimeline_obj {
	public:
		typedef hx::Object super;
		HX_DO_INTERFACE_RTTI;

		void (hx::Object :: *_hx_addFrameScript)(int index, ::Dynamic method); 
		static inline void addFrameScript( ::Dynamic _hx_,int index, ::Dynamic method) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_addFrameScript)(index,method);
		}
		void (hx::Object :: *_hx_enterFrame)(int deltaTime); 
		static inline void enterFrame( ::Dynamic _hx_,int deltaTime) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_enterFrame)(deltaTime);
		}
		void (hx::Object :: *_hx_gotoAndPlay)( ::Dynamic frame,::String scene); 
		static inline void gotoAndPlay( ::Dynamic _hx_, ::Dynamic frame,::String scene) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_gotoAndPlay)(frame,scene);
		}
		void (hx::Object :: *_hx_gotoAndStop)( ::Dynamic frame,::String scene); 
		static inline void gotoAndStop( ::Dynamic _hx_, ::Dynamic frame,::String scene) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_gotoAndStop)(frame,scene);
		}
		void (hx::Object :: *_hx_nextFrame)(); 
		static inline void nextFrame( ::Dynamic _hx_) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_nextFrame)();
		}
		void (hx::Object :: *_hx_play)(); 
		static inline void play( ::Dynamic _hx_) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_play)();
		}
		void (hx::Object :: *_hx_prevFrame)(); 
		static inline void prevFrame( ::Dynamic _hx_) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_prevFrame)();
		}
		void (hx::Object :: *_hx_stop)(); 
		static inline void stop( ::Dynamic _hx_) {
			(_hx_.mPtr->*( hx::interface_cast< ::openfl::_internal::utils::ITimeline_obj *>(_hx_.mPtr->_hx_getInterface(0xa37152a5)))->_hx_stop)();
		}
};

} // end namespace openfl
} // end namespace _internal
} // end namespace utils

#endif /* INCLUDED_openfl__internal_utils_ITimeline */ 
