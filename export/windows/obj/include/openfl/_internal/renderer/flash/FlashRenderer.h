// Generated by Haxe 4.0.2
#ifndef INCLUDED_openfl__internal_renderer_flash_FlashRenderer
#define INCLUDED_openfl__internal_renderer_flash_FlashRenderer

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,IMap)
HX_DECLARE_CLASS2(haxe,ds,ObjectMap)
HX_DECLARE_CLASS4(openfl,_internal,renderer,flash,FlashRenderer)
HX_DECLARE_CLASS4(openfl,_internal,renderer,flash,IDisplayObject)
HX_DECLARE_CLASS2(openfl,events,Event)

namespace openfl{
namespace _internal{
namespace renderer{
namespace flash{


class HXCPP_CLASS_ATTRIBUTES FlashRenderer_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef FlashRenderer_obj OBJ_;
		FlashRenderer_obj();

	public:
		enum { _hx_ClassId = 0x73510aee };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="openfl._internal.renderer.flash.FlashRenderer")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"openfl._internal.renderer.flash.FlashRenderer"); }

		inline static hx::ObjectPtr< FlashRenderer_obj > __new() {
			hx::ObjectPtr< FlashRenderer_obj > __this = new FlashRenderer_obj();
			__this->__construct();
			return __this;
		}

		inline static hx::ObjectPtr< FlashRenderer_obj > __alloc(hx::Ctx *_hx_ctx) {
			FlashRenderer_obj *__this = (FlashRenderer_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(FlashRenderer_obj), false, "openfl._internal.renderer.flash.FlashRenderer"));
			*(void **)__this = FlashRenderer_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~FlashRenderer_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlashRenderer",f3,36,bf,43); }

		static void __boot();
		static  ::Dynamic __meta__;
		static  ::haxe::ds::ObjectMap instances;
		static void _hx_register(::Dynamic renderObject);
		static ::Dynamic _hx_register_dyn();

		static void render( ::openfl::events::Event _);
		static ::Dynamic render_dyn();

};

} // end namespace openfl
} // end namespace _internal
} // end namespace renderer
} // end namespace flash

#endif /* INCLUDED_openfl__internal_renderer_flash_FlashRenderer */ 
